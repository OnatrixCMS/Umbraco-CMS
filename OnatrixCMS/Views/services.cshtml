@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;

    var selection = Umbraco.Content(Guid.Parse("56e677b2-a923-4c75-9d76-66e7b384db4e"))!
    .ChildrenOfType("servicesDetails")!
    .Where(x => x.IsVisible());

    var itemsPerPage = 6;

    if(!int.TryParse(Context.Request.Query["page"], out int currentPage))
        currentPage = 1;

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);
}

 <section class="services" id="services">
            <div class="container">
                @if(!string.IsNullOrEmpty(Model.Value("subtitle").ToString()))
                {
                    <div class="section-title">
                        <h2>@Model.Value("subtitle")</h2>
                    </div>
                }
                <div class="services">
                @if (pagedItems is not null)
                {
                    @foreach (var item in pagedItems)
                    {
                        var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                        var preamble = item?.Value<string>("preamble") ?? "";
                        
                    <a href="@item.Url()">
                        <div class="card-wrapper">
                            <div class="card bg-light">
                                <h5>@item.Name</h5>
                                <img src="@image" alt="@item.Name">
                                <p>@preamble</p>
                            </div>
                        </div>
                    </a>
                    }
                }
                </div>
            </div>

    <section class="pagination">
        <div class="container">
            @if (currentPage > 1)
            {
                <a href="?page=@(currentPage -1)" class="">PREV</a>
            }
            else
            {
                <span class="">PREV</span>
            }

            <ul class="pages">
                @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                {
                    <li class="@((i == currentPage) ? "number active" : "number")">
                        <a href="?page=@i">@i</a>
                    </li>
                }
            </ul>

            @if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
            {
                <a class="" href="?page=@(currentPage +1)">NEXT</a>
            }
            else
            {
                <span class="">NEXT</span>
            }
        </div>
    </section>

</section>

        